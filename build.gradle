plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id("io.freefair.lombok") version "8.13.1"
    id 'jacoco'
}

group = 'com.jimmy_D'
version = '0.0.1-SNAPSHOT'

apply from: 'version.gradle'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}


def querydslDir = layout.buildDirectory.dir("generated/annotationProcessor/java/main").get().asFile

tasks.register("generateQueryDSL", JavaCompile) {
    source = fileTree("src/main/java") {
        include "**/database/entity/*.java"
    }
    classpath = sourceSets.main.compileClasspath
    destinationDirectory.set(file(querydslDir))
    options.annotationProcessorPath = configurations.annotationProcessor
    options.compilerArgs += [
            "-proc:only",
            "-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
    ]
}



jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom annotationProcessor, implementation, compileOnly, runtimeOnly
}

repositories {
    mavenCentral()
}



dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.bouncycastle:bcprov-jdk18on:1.80'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-api:${versions.springdoc}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${versions.springdoc}"
    implementation "com.querydsl:querydsl-jpa:${versions.querydsl}:jakarta"

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    annotationProcessor "com.querydsl:querydsl-apt:${versions.querydsl}:jakarta"
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'



    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testAnnotationProcessor "com.querydsl:querydsl-apt:${versions.querydsl}:jakarta"
    testAnnotationProcessor 'jakarta.persistence:jakarta.persistence-api'
}

tasks.named('test') {
    useJUnitPlatform()
    jvmArgs("-XX:+EnableDynamicAgentLoading")
}
